<?xml version="1.0"?>

<!-- 

# ===================================== COPYRIGHT ===================================== #
#                                                                                       #
#  IFRA (Intelligent Flexible Robotics and Assembly) Group, CRANFIELD UNIVERSITY        #
#  Created on behalf of the IFRA Group at Cranfield University, United Kingdom          #
#  E-mail: IFRA@cranfield.ac.uk                                                         #
#                                                                                       #
#  Licensed under the Apache-2.0 License.                                               #
#  You may not use this file except in compliance with the License.                     #
#  You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0  #
#                                                                                       #
#  Unless required by applicable law or agreed to in writing, software distributed      #
#  under the License is distributed on an "as-is" basis, without warranties or          #
#  conditions of any kind, either express or implied. See the License for the specific  #
#  language governing permissions and limitations under the License.                    #
#                                                                                       #
#  IFRA Group - Cranfield University                                                    #
#  AUTHORS: Mikel Bueno Viso - Mikel.Bueno-Viso@cranfield.ac.uk                         #
#           Seemal Asif      - s.asif@cranfield.ac.uk                                   #
#           Phil Webb        - p.f.webb@cranfield.ac.uk                                 #
#                                                                                       #
#  Date: July, 2022.                                                                    #
#                                                                                       #
# ===================================== COPYRIGHT ===================================== #

# ===================================== COPYRIGHT ===================================== #
#                                                                                       #
#  Some of the information used to build the ROS2 Panda-Robot .urdf files in this ROS2  #
#  repository has been taken from the following resources:                              #
#     - frankaemika/franka_ros2 -> https://github.com/frankaemika/franka_ros2.          #
#       The original files can be found in the franka_description ROS2 package inside   #
#       he franka_ros2 GitHub repository.                                               #
#                                                                                       #
#  AUTHOR: Franka Emika GmbH - support@franka.de                                        #
#                                                                                       #
#  Copyright 2021 Franka Emika GmbH                                                     #
#  (ORIGINAL LICENSE) -> Licensed under the Apache-2.0 License.                         #
#                                                                                       #
#  CHANGES MADE:                                                                        #
#  Robot information/specifications have been taken, and the code has been modified and #
#  re-organised in accordance with the ros2_RobotSimulation standards.                  #
#                                                                                       #
# ===================================== COPYRIGHT ===================================== #

# ======= CITE OUR WORK ======= #
# You can cite our work with the following statement:
# IFRA (2022) ROS2.0 ROBOT SIMULATION. URL: https://github.com/IFRA-Cranfield/ros2_RobotSimulation.

-->

<robot xmlns:xacro="http://wiki.ros.org/xacro" name="panda">

  <!-- ===== ARGUMENTS ===== -->

  <!-- CELL LAYOUT:  -->
  <xacro:arg name="cell_layout_1" default="false"/>
  <xacro:property name="cell_layout_1" value="$(arg cell_layout_1)"/>
  <xacro:arg name="cell_layout_2" default="false"/>
  <xacro:property name="cell_layout_2" value="$(arg cell_layout_2)"/>
  
  <!-- END-EFFECTOR:  -->
  <xacro:arg name="EE_no" default="false"/>
  <xacro:property name="EE_no" value="$(arg EE_no)"/>


  <!-- Include XACRO-MACRO file of the PANDA ROBOT: -->
  <xacro:include filename="$(find franka_env)/urdf/panda_macro.urdf.xacro"/>	
  <xacro:panda 
    prefix=""
    EE_no="${EE_no}"
  />

  <!-- Gazebo world link: -->
  <link name="world"/>

  <!-- ========== ========== ========== ========== ========== ========== -->
  <!-- CELL LAYOUT SELECTION: -->

  <!-- CELL LAYOUT N1) PANDA ROBOT alone: -->
  <xacro:if value="${cell_layout_1}">
    <joint name="world-base_link-fixed" type="fixed">
      <parent link="world"/>
      <child link="panda_link0"/>
    </joint>
  </xacro:if>

  <!-- CELL LAYOUT N2) PANDA ROBOT on top of a pedestal: -->
  <xacro:if value="${cell_layout_2}">
    <link name='panda_base'>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="100"/>
        <inertia ixx="0.01"  ixy="0"  ixz="0" iyy="0.01" iyz="0" izz="0.01" />
      </inertial>
      <collision name='collision'>
        <origin xyz="0 0 0" rpy=" 0 0 0"/> 
        <geometry>
          <box size = "0.2 0.2 1.3"/>
        </geometry>
      </collision>
      <visual name='chassis_visual'>
        <origin xyz="0 0 0" rpy=" 0 0 0"/>
        <geometry>
          <box size = "0.2 0.2 1.3"/>
        </geometry>
        <material name="red">
          <color rgba="1 0 0 1"/>
        </material>
      </visual>
    </link>
    <gazebo reference="panda_base">
      <material>Gazebo/Red</material>
    </gazebo>

    <joint name="world_joint" type="fixed">
      <parent link="world" />
      <child link = "panda_base" />
      <origin xyz="0.0 0.0 0.65" rpy="0.0 0.0 0.0" />
    </joint>
    <joint name="panda_joint" type="fixed">
      <parent link="panda_base" />
      <child link = "panda_link0" />
      <origin xyz="0.0 0.0 0.655" rpy="0.0 0.0 0.0" /> 
    </joint>


<!--In-Hand Camera-->
    <link name="camera_link">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <!-- <mesh filename="file://$(find project_env)/meshes/D435_Solid.STL"/> -->
                <box size="0.025 0.1 0.025 "/>
            </geometry>
        </collision>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <!-- <mesh filename="file://$(find project_env)/meshes/D435_Solid.STL"/> -->
                <box size="0.025 0.1 0.025 "/>
            </geometry>
        </visual>
        <inertial>
            <mass value="1e-5"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
    </link>

    <joint name="camera_joint" type="fixed">
      <parent link="end_effector_frame" />
      <child link = "camera_link" />
      <origin xyz="-0.075 0.0 0.030" rpy="0.0 0.0 0.0" /> 
    </joint>

    <link name="camera_link_optical" />

    <joint name="camera_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="-1.57 0 -1.57"/>
        <parent link="camera_link"/>
        <child link="camera_link_optical"/>
    </joint>

    <gazebo reference="camera_link">
        <sensor type="depth" name="realsense">
	        <always_on>1</always_on>
	        <visualize>true</visualize>
	        <update_rate>0</update_rate>
	        <camera>
	            <horizontal_fov>1.047198</horizontal_fov>
	            <image>
	                <width>640</width>
	                <height>480</height>
	                <format>B8G8R8</format>  <!--Changed format since channels were inverted, to go back, change to R8G8B8-->
	            </image>
	            <clip>
	                <near>0.01</near>
	                <far>3</far>
	            </clip>
	        </camera>
	        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
	            <baseline>0.2</baseline>
	            <alwaysOn>true</alwaysOn>
	            <updateRate>0.0</updateRate>
	            <cameraName>/realsense</cameraName>
	            <imageTopicName>/realsense/color/image_raw</imageTopicName>
	            <cameraInfoTopicName>/realsense/color/camera_info</cameraInfoTopicName>
	            <depthImageTopicName>/realsense/depth/image_raw</depthImageTopicName>
	            <depthImageInfoTopicName>/realsense/depth/camera_info</depthImageInfoTopicName>
	            <pointCloudTopicName>/realsense/depth/points</pointCloudTopicName>
	            <frameName>camera_link_optical</frameName>
	            <pointCloudCutoff>0.1</pointCloudCutoff>
	            <pointCloudCutoffMax>3</pointCloudCutoffMax>
	            <distortionK1>0</distortionK1>
	            <distortionK2>0</distortionK2>
	            <distortionK3>0</distortionK3>
	            <distortionT1>0</distortionT1>
	            <distortionT2>0</distortionT2>
	            <CxPrime>0</CxPrime>
	            <Cx>0</Cx>
	            <Cy>0</Cy>
	            <focalLength>0</focalLength>
	            <hackBaseline>0</hackBaseline>
	        </plugin>            
        </sensor>           
    </gazebo>
    <gazebo reference="camera_link">
      <material> Gazebo/Red </material>
    </gazebo>
        
  </xacro:if>

</robot>
